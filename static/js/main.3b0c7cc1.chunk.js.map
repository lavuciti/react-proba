{"version":3,"sources":["components/StartGame/StartGame.js","components/Player/Player.js","components/TablePlayer/TablePlayer.js","components/GameStart/GameStart.js","components/PlayerQuiz/PlayerQuiz.js","components/Quiz/Quiz.js","App.js","index.js"],"names":["StartGame","suffle","className","id","onClick","to","Player","card","shuffleOption","choosenPlayer","player","src","alt","capitalPlayer","text","colorBtn","casePlayer","TablePlayer","allCard","map","index","GameStart","options","chooseOption","PlayerQuiz","playerQuiz","questionNumber","score","nextQuestion","actionButtons","editButton","withRouter","props","Questions","Responds","Answers","playerCard","useState","copyPlayerCard","setCopyPlayerCard","useEffect","test","navigator","userAgent","setDisplayMobilOne","history","push","roundNumber","setQuestionNumber","setscore","setEditButton","disappearOption","setDisappearOption","displayTextCorrect","setDisplayTextCorrect","displayTextWrong","setDisplayTextWrong","displayTextEnd","setDisplayTextEnd","displayTextWinner","setDisplayTextWinner","disappearQuestion","setDisappearQuestion","displayMobileOne","displayMobileTwo","setDisplayMobilTwo","newQuestions","detectMobile","playerTable","witchRespond","App","questionsGeography","setQuestionsGeography","answersGeography","setAnswersGeography","respondsGeography","setRespondsGeography","questionsHistory","setQuestionsHistory","answersHistory","setAnswersHistory","respondsHistory","setRespondsHistory","questionsMathematics","setQuestionsMathematics","answersMathematics","setAnswersMathematics","respondsMathematics","setRespondsMathematics","questionsTheGeneralEducations","setQuestionsTheGeneralEducations","answersTheGeneralEducations","setAnswersTheGeneralEducations","respondsTheGeneralEducations","setRespondsTheGeneralEducations","setOptions","setQuestion","setAnswers","setResponds","option","setOption","copyAnswers","suffleAnswers","rand","i","length","r","Math","floor","random","splice","setPlayerCard","path","exact","newAnswersGeography","newQuestionsGeography","newRespondsGeography","newAnswersHistory","newQuestionsHistory","newRespondsHistory","newAnswersMathematics","newQuestionsMathematics","newRespondsMathematics","newAnswersTheGeneralEducations","newQuestionsTheGeneralEducations","newRespondsTheGeneralEducations","newCopyCard","filter","ReactDOM","render","document","querySelector"],"mappings":"sTAsBeA,MAlBf,YAA6B,IAATC,EAAQ,EAARA,OAEhB,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,sBAAKC,GAAG,OAAOD,UAAU,OAAzB,UACI,wBAAQA,UAAU,4CAAlB,SACI,+CAEJ,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAME,QAAS,WAAKH,KAAWI,GAAG,gBAAgBH,UAAU,4BAA5D,gC,aCGTI,MAXf,YAAsD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,cACjC,OACG,sBAAKN,GAAII,EAAKG,OAAQR,UAAU,OAAhC,UACI,qBAAKS,IAAK,UAAUJ,EAAKG,OAAO,OAAQR,UAAU,eAAeU,IAAKL,EAAKM,gBAC3E,oBAAIX,UAAU,aAAd,SAA4BK,EAAKM,gBACjC,mBAAGX,UAAU,YAAb,SAA0BK,EAAKO,OAC/B,eAAC,IAAD,CAAMT,GAAG,QAAQD,QAAS,WAAKI,IAAiBC,EAAcF,EAAKG,SAAUP,GAAII,EAAKG,OAAO,MAAOR,UAAW,WAAWK,EAAKQ,SAA/H,uBAAoJR,EAAKS,kB,MCetJC,MAtBf,YAA2D,IAArCV,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,cAEjCS,EAAUX,EAAKY,KAAI,SAACZ,EAAMa,GAC5B,OACI,cAAC,EAAD,CAAQb,KAAMA,EAAkBC,cAAeA,EAAeC,cAAeA,GAApDW,MAIjC,OACI,qBAAKlB,UAAU,YAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,OAAd,+BACA,qBAAKA,UAAU,6BAAf,SAEKgB,U,MCUNG,MAxBf,YAA4C,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,aAEzB,OACI,qBAAKrB,UAAU,YAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,sBAAKC,GAAG,OAAOD,UAAU,aAAzB,UACI,wBAAQA,UAAU,4CAAlB,SACI,oDAEJ,qBAAKA,UAAU,sBAAf,SAEKoB,EAAQH,KAAI,SAACG,EAASF,GAAV,OACT,qBAAmBlB,UAAU,SAA7B,SACI,cAAC,IAAD,CAAMG,GAAG,QAAQD,QAAS,WAAKmB,EAAaD,IAAWpB,UAAU,kEAAjE,SAAoIoB,KAD5HF,gB,MCgBzBI,MA7Bf,YAAmF,IAA9DC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,eAAgBC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,aAE9CC,EAFwE,EAAZC,WAG9D,mCACK,wBAAQ1B,QAAS,WAAKwB,KAAiBzB,GAAG,YAAYD,UAAU,kBAAhE,+BAGL,mCACI,wBAAQC,GAAG,YAAYD,UAAU,kBAAjC,+BAIP,OAEG,sBAAKA,UAAU,2BAAf,UACI,6BAAKuB,EAAWZ,gBAChB,qBAAKF,IAAK,UAAUc,EAAWf,OAAO,OAAQR,UAAU,eAAeU,IAAKa,EAAWZ,gBACvF,sBAAKX,UAAU,YAAf,UACI,oBAAGC,GAAG,cAAaD,UAAU,OAA7B,4BAAoDyB,KACpD,oBAAGxB,GAAK,cAAcD,UAAY,OAAlC,qBAAkDwB,KACjDG,S,MC+HFE,mBA9If,SAAcC,EAAd,GAAgE,EAA1CC,UAA0C,EAA/BC,SAA+B,EAArBC,QAAqB,EAAZC,WAAa,IAG7D,EAA4CC,mBAAS,CAAC,CAAC3B,OAAO,MAAQG,cAAc,MAAQG,WAAW,MAAQF,KAAK,uEAAyEC,SAAS,aAAtM,mBAAOuB,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WAEF,uGAAuGC,KAAKC,UAAUC,YACtHC,GAAmB,GAEvBL,EAAkBP,EAAMI,YACC,UAArBJ,EAAMC,WACND,EAAMa,QAAQC,KAAK,mBAEzB,IAEF,MAAsCT,mBAAS,GAA/C,mBAAOU,EAAP,KACA,GADA,KAC4CV,mBAAU,IAAtD,mBAAOX,EAAP,KAAuBsB,EAAvB,KACA,EAAyBX,mBAAS,GAAlC,mBAAMV,EAAN,KAAasB,EAAb,KACA,EAAmCZ,oBAAS,GAA5C,mBAAMP,EAAN,KAAkBoB,EAAlB,KACA,EAA6Cb,mBAAS,IAAtD,mBAAMc,EAAN,KAAuBC,EAAvB,KACA,EAAoDf,oBAAS,GAA7D,mBAAOgB,EAAP,KAA2BC,EAA3B,KACA,EAAgDjB,oBAAS,GAAzD,mBAAOkB,EAAP,KAAyBC,EAAzB,KACA,EAA4CnB,oBAAS,GAArD,mBAAOoB,EAAP,KAAuBC,EAAvB,KACA,EAAkDrB,oBAAS,GAA3D,mBAAOsB,EAAP,KAA0BC,EAA1B,KACA,EAAiDvB,mBAAS,IAA1D,mBAAMwB,EAAN,KAAyBC,EAAzB,KACA,EAA8CzB,oBAAU,GAAxD,mBAAM0B,EAAN,KAAwBnB,EAAxB,KACA,GAA8CP,oBAAU,GAAxD,qBAAM2B,GAAN,MAAwBC,GAAxB,MAuBMrC,GAAe,WACjBqC,IAAmB,GACflB,IAAgBrB,GAChB8B,GAAoB,GACpBF,GAAsB,GACtBI,GAAmBD,GACnBG,GAAsBD,GACtBG,EAAqB,gBACrBZ,GAAc,KAGdlB,EAAMkC,aAAaxC,GACnBwB,GAAc,GACdF,EAAkBtB,EAAe,GACjC0B,EAAmB,KACnBI,GAAoB,GACpBF,GAAsB,KAexBa,GAAe,WACb,uGAAuG1B,KAAKC,UAAUC,YACtHsB,IAAmB,IAIrBG,GAAc9B,EAAenB,KAAI,SAACM,EAAYL,GAChD,OACI,cAAC,EAAD,CAAYK,WAAYA,EAEZC,eAAgBA,EAChBC,MAASA,EACTC,aAAgBA,GAChBE,WAAYA,GAJPV,MAQzB,OACI,qBAAKlB,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,UAGC6D,GAAoB,CAACK,IAElB,sBAAKjE,GAAG,OAAOD,UAAU,aAAzB,UACI,yBAAQA,UAAU,4CAAlB,UACI,oBAAIA,UAAY,aAAc2D,EAA9B,SAAkD7B,EAAMC,YAEvD0B,GAAqB,qBAAIzD,UAAW,YAAf,UAA4B8B,EAAMI,WAAW,GAAGvB,cAAhD,OArClC,UAAAmB,EAAMI,WAAW,GAAGvB,eAAyB,QAAAmB,EAAMI,WAAW,GAAGvB,eAAuB,QAAAmB,EAAMI,WAAW,GAAGvB,cACpG,UAGA,WAiC0B,WAAsFc,EAAtF,SACtB,uBADsB,8BAK1B,sBAAKzB,UAAU,sBAAf,UAEKmD,GAAsB,qBAAKnD,UAAU,qEAAf,SACf,oBAAIA,UAAU,mBAAd,8BAGPqD,GAAoB,sBAAKrD,UAAU,qEAAf,UACjB,oBAAIA,UAAU,iBAAd,+BACA,qBAAIA,UAAU,OAAd,+BAAwC8B,EAAME,eAGjD8B,IAAqB,CAACI,IAEtBpC,EAAMG,QAAQhB,KAAI,SAACgB,EAASf,GAAV,OACX,qBAAmBlB,UAAW,SAAUiD,EAAxC,SACI,qBAAK/C,QAAS,YAhGzB,SAAC+B,GAClBe,GAAc,GACdiB,KACInC,EAAME,WAAaC,GAClBiB,EAAmB,gBACnBE,GAAuBD,GACvBJ,EAAStB,EAAQ,KAGlByB,EAAmB,gBACnBI,GAAqBD,IAsFsBc,CAAalC,IAAWjC,UAAU,kEAArD,SAAwHiC,KADhHf,MAKnBqC,GAAkB,cAAC,IAAD,CAAMpD,GAAG,IAAIH,UAAU,0CAAvB,+CC+L5BoE,MAtUf,WAEI,IAAM/D,EAAO,CACT,CAACG,OAAO,MAAQG,cAAc,MAAQG,WAAW,MAAQF,KAAK,uEAAyEC,SAAS,WAChJ,CAACL,OAAO,QAAUG,cAAc,QAAUG,WAAW,SAAWF,KAAK,+DAAiEC,SAAS,WAC/I,CAACL,OAAO,WAAaG,cAAc,WAAaG,WAAW,WAAaF,KAAK,+DAAiEC,SAAS,WACvJ,CAACL,OAAO,MAAQG,cAAc,MAAQG,WAAW,OAASF,KAAK,sDAAwDC,SAAS,aAChI,CAACL,OAAO,WAAaG,cAAc,WAAaG,WAAW,WAAaF,KAAK,gFAAkFC,SAAS,QACxK,CAACL,OAAO,UAAYG,cAAc,UAAYG,WAAW,UAAYF,KAAK,0DAA4DC,SAAS,WAInJ,EAAoDsB,mBAAS,CACzD,yEACA,2FACA,4CACA,mEACA,+IALJ,mBAAOkC,EAAP,KAA2BC,EAA3B,KAQA,EAAgDnC,mBAAS,CACrD,CAAC,QAAS,MAAO,OAAQ,WACzB,CAAC,KAAM,KAAM,KAAM,KACnB,CAAC,kBAAmB,aAAc,qBAAiB,UACnD,CAAC,UAAW,OAAQ,QAAS,aAC7B,CAAC,cAAe,sCAA6B,YAAa,iBAL9D,mBAAOoC,EAAP,KAAyBC,EAAzB,KAQA,EAAkDrC,mBAAS,CACvD,QACA,KACA,kBACA,YACA,wCALJ,mBAAOsC,EAAP,KAA0BC,EAA1B,KAQE,EAAgDvC,mBAAS,CACvD,6BACA,2BACA,4DACA,oCACA,uCALF,mBAAOwC,EAAP,KAAyBC,EAAzB,KAQA,EAA4CzC,mBAAS,CACnD,CAAC,OAAQ,OAAQ,OAAQ,QACzB,CAAC,OAAQ,OAAQ,OAAQ,QACzB,CAAC,WAAY,SAAU,UAAW,UAClC,CAAC,OAAQ,OAAQ,OAAQ,QACzB,CAAC,OAAQ,OAAQ,OAAQ,UAL3B,mBAAO0C,EAAP,KAAuBC,EAAvB,KAUA,EAA8C3C,mBAAS,CACrD,OACA,OACA,WACA,OACA,SALF,mBAAO4C,EAAP,KAAwBC,EAAxB,KAQA,EAAwD7C,mBAAS,CAC/D,mGACA,oEACA,iEACA,2JACA,sIALF,mBAAO8C,EAAP,KAA6BC,EAA7B,KAQA,EAAoD/C,mBAAS,CAC3D,CAAC,SAAU,SAAU,QAAS,UAC9B,CAAC,UAAW,UAAW,UAAW,UAClC,CAAC,SAAU,SAAU,SAAU,UAC/B,CAAC,QAAS,QAAS,QAAS,SAC5B,CAAC,SAAU,SAAU,SAAU,eALjC,mBAAOgD,EAAP,KAA2BC,EAA3B,KAQA,EAAsDjD,mBAAS,CAC7D,SACA,UACA,SACA,QACA,gBALF,mBAAOkD,EAAP,KAA4BC,EAA5B,KAQA,EAA0EnD,mBAAS,CACjF,8DACA,2CACA,8DACA,wBACA,0CALF,mBAAOoD,EAAP,KAAsCC,EAAtC,KAQA,EAAsErD,mBAAS,CAC7E,CAAC,eAAgB,eAAgB,gCAAiC,0BAClE,CAAC,wBAAyB,mBAAoB,4BAAwB,gCACtE,CAAC,aAAc,iBAAkB,aAAc,aAC/C,CAAC,8BAA0B,uBAAwB,0BAAsB,uBACzE,CAAC,IAAK,KAAM,KAAM,OALpB,mBAAOsD,EAAP,KAAoCC,GAApC,KAQA,GAAwEvD,mBAAS,CAC/E,gCACA,4BACA,iBACA,0BAJ+E,MAAjF,qBAAOwD,GAAP,MAAqCC,GAArC,MA+EA,GAA8BzD,mBAAS,CAAC,WAAY,aAAc,aAAc,sBAAhF,qBAAOf,GAAP,MAAgByE,GAAhB,MAcF,GAAiC1D,mBAAS,SAA1C,qBAAOJ,GAAP,MAAkB+D,GAAlB,MACA,GAA8B3D,mBAAS,CAAC,UAAxC,qBAAOF,GAAP,MAAgB8D,GAAhB,MACA,GAAgC5D,mBAAS,SAAzC,qBAAOH,GAAP,MAAiBgE,GAAjB,MACA,GAA4B7D,mBAAS,IAArC,qBAAO8D,GAAP,MAAeC,GAAf,MAqCAC,GAAc,GAEZC,GAAgB,WAEjB,IADH,IAAIC,EAAO,GACCC,EAAI,EAAGA,EAAIH,GAAYI,OAAO,EAAGD,IAAK,CAC7C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAASR,GAAYI,QAC7CF,EAAKzD,KAAKuD,GAAYK,IACtBL,GAAYS,OAAOJ,EAAE,GAEvB,OAAOH,GAMR,GAAoClE,mBAAS,IAA7C,qBAAOD,GAAP,MAAmB2E,GAAnB,MAgDA,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAO,IAAIC,OAAK,EAAvB,SACI,cAAC,EAAD,CAAWhH,OA7LV,WAiBb,IAfA,IAAIiH,EAAsB,GACtBC,EAAwB,GACxBC,EAAuB,GAEvBC,EAAoB,GACpBC,EAAsB,GACtBC,EAAqB,GAErBC,EAAwB,GACxBC,EAA0B,GAC1BC,EAAyB,GAEzBC,EAAiC,GACjCC,EAAmC,GACnCC,EAAkC,GAC7BrB,EAAI,EAAGA,EAAI/B,EAAiBgC,OAAO,EAAGD,IAAK,CAClD,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAASpC,EAAiBgC,QAElDS,EAAoBpE,KAAK2B,EAAiBiC,IAC1CjC,EAAiBqC,OAAOJ,EAAE,GAC1BS,EAAsBrE,KAAKyB,EAAmBmC,IAC9CnC,EAAmBuC,OAAOJ,EAAE,GAC5BU,EAAqBtE,KAAK6B,EAAkB+B,IAC5C/B,EAAkBmC,OAAOJ,EAAE,GAE3BW,EAAkBvE,KAAKiC,EAAe2B,IACtC3B,EAAe+B,OAAOJ,EAAE,GACxBY,EAAoBxE,KAAK+B,EAAiB6B,IAC1C7B,EAAiBiC,OAAOJ,EAAE,GAC1Ba,EAAmBzE,KAAKmC,EAAgByB,IACxCzB,EAAgB6B,OAAOJ,EAAE,GAEzBc,EAAsB1E,KAAKuC,EAAmBqB,IAC9CrB,EAAmByB,OAAOJ,EAAE,GAC5Be,EAAwB3E,KAAKqC,EAAqBuB,IAClDvB,EAAqB2B,OAAOJ,EAAE,GAC9BgB,EAAuB5E,KAAKyC,EAAoBmB,IAChDnB,EAAoBuB,OAAOJ,EAAE,GAE7BiB,EAA+B7E,KAAK6C,EAA4Be,IAChEf,EAA4BmB,OAAOJ,EAAE,GACrCkB,EAAiC9E,KAAK2C,EAA8BiB,IACpEjB,EAA8BqB,OAAOJ,EAAE,GACvCmB,EAAgC/E,KAAK+C,GAA6Ba,IAClEb,GAA6BiB,OAAOJ,EAAE,GAGxChC,EAAoBwC,GACpB1C,EAAsB2C,GACtBvC,EAAqBwC,GAErBtC,EAAoBwC,GACpBtC,EAAkBqC,GAClBnC,EAAmBqC,GAEnBnC,EAAwBqC,GACxBnC,EAAsBkC,GACtBhC,EAAuBkC,GAEvBhC,EAAiCkC,GACjChC,GAA+B+B,GAC/B7B,GAAgC+B,QAgIxB,cAAC,IAAD,CAAOb,KAAO,gBAAd,SACI,cAAC,EAAD,CAAazG,KAAMA,EAAMC,cA1HjB,WAEjB,IADD,IAAI+F,EAAO,GACDC,EAAI,EAAGA,EAAIlF,GAAQmF,OAAO,EAAGD,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAASvF,GAAQmF,QACzCF,EAAKzD,KAAKxB,GAAQoF,IAClBpF,GAAQwF,OAAOJ,EAAE,GAEnBX,GAAWQ,IAmHqD9F,cArDjD,SAACC,GAErB,IAAMoH,EAAcvH,EAAKwH,QAAO,SAAAxH,GAAI,OAAEA,EAAKG,SAAWA,KACtDqG,GAAce,QAoDJ,cAAC,IAAD,CAAOd,KAAO,QAAd,SACI,cAAC,EAAD,CAAW1F,QAASA,GAASC,aA5GxB,SAAC4E,GAClBC,GAAUD,GACK,eAAXA,GACAH,GAAYzB,EAAmB,IAC/B2B,GAAYvB,EAAkB,IAE9B0B,GAAW,YAAO5B,EAAiB,IACnCwB,GAAWK,GAAcD,MAET,aAAXF,GACPH,GAAYnB,EAAiB,IAC7BqB,GAAYjB,EAAgB,IAE5BoB,GAAW,YAAOtB,EAAe,IACjCkB,GAAWK,GAAcD,MAEP,eAAXF,GACPH,GAAYb,EAAqB,IACjCe,GAAYX,EAAoB,IAEhCc,GAAW,YAAOhB,EAAmB,IACrCY,GAAWK,GAAcD,OAGzBL,GAAYP,EAA8B,IAC1CS,GAAYL,GAA6B,IAEzCQ,GAAW,YAAOV,EAA4B,IAC9CM,GAAWK,GAAcD,WAkFnB,cAAC,IAAD,CAAOW,KAAO,QAAd,SACI,cAAC,EAAD,CAAM/E,UAAWA,GACXE,QAASA,GACTD,SAAUA,GACVZ,QAASA,GACTc,WAAYA,GAEZ8B,aAxDD,SAACxC,GACL,eAAXyE,IACFH,GAAYzB,EAAmB7C,IAC/BwE,GAAYvB,EAAkBjD,IAE9B2E,GAAW,YAAO5B,EAAiB/C,IACnCuE,GAAWK,GAAcD,MAEP,aAAXF,IACPH,GAAYnB,EAAiBnD,IAC7BwE,GAAYjB,EAAgBvD,IAE5B2E,GAAW,YAAOtB,EAAerD,IACjCuE,GAAWK,GAAcD,MAEP,eAAXF,IACPH,GAAYb,EAAqBzD,IACjCwE,GAAYX,EAAoB7D,IAEhC2E,GAAW,YAAOhB,EAAmB3D,IACrCuE,GAAWK,GAAcD,OAGzBL,GAAYP,EAA8B/D,IAC1CwE,GAAYL,GAA6BnE,IAEzC2E,GAAW,YAAOV,EAA4BjE,IAC9CuE,GAAWK,GAAcD,iB,MClSjC2B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,Y","file":"static/js/main.3b0c7cc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./StartGame.css\"\r\n\r\nfunction StartGame({suffle}){\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-around\">\r\n                <div id=\"game\" className=\"quiz\">\r\n                    <header className=\"justify-content-center align-items-center\">\r\n                        <h1>Kviz znanja</h1>\r\n                    </header>\r\n                    <div className=\"options text-center\">\r\n                        <Link onClick={()=>{suffle()}} to=\"/choosePlayer\" className=\"btn btn-primary playerBtn\">Kliknite</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartGame;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Player.css\";\r\n\r\n//shuffleOption na onClick je samo da se pokrene funkcija u App.js koja mesa kartice u options\r\n// choosePlayer kada se klikne salje na kog igraca je kliknuto\r\nfunction Player({card, shuffleOption, choosenPlayer}){\r\n     return(\r\n        <div id={card.player} className=\"card\">\r\n            <img src={\"../img/\"+card.player+\".jpg\"} className=\"card-img-top\" alt={card.capitalPlayer}></img>\r\n            <h5 className=\"card-title\">{card.capitalPlayer}</h5>\r\n            <p className=\"card-text\">{card.text}</p>\r\n            <Link to=\"/game\" onClick={()=>{shuffleOption(); choosenPlayer(card.player)}} id={card.player+\"Btn\"} className={\"btn btn-\"+card.colorBtn}>Izaberite {card.casePlayer}</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport Player from \"../Player/Player\";\r\nimport \"./TablePlayer.css\";\r\n\r\n\r\nfunction TablePlayer({card, shuffleOption, choosenPlayer}){\r\n    \r\n    const allCard = card.map((card, index)=>{\r\n        return (\r\n            <Player card={card} key={index} shuffleOption={shuffleOption} choosenPlayer={choosenPlayer}/>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"addPlayer text-center\">\r\n                <h1 className=\"pb-3\">Izaberite igraca </h1>\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    {allCard}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TablePlayer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./GameStart.css\";\r\n\r\n\r\nfunction GameStart({options, chooseOption}){\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-around\">\r\n                <div id=\"game\" className=\"quiz col-8\">\r\n                    <header className=\"justify-content-center align-items-center\">\r\n                        <h1>Izaberite oblast</h1>\r\n                    </header>\r\n                    <div className=\"options text-center\">\r\n\r\n                        {options.map((options, index)=> \r\n                            <div key = {index} className=\"option\">\r\n                                <Link to=\"/quiz\" onClick={()=>{chooseOption(options)}} className=\"button optionP d-flex justify-content-center align-items-center\">{options}</Link>\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameStart;","import React from 'react';\r\nimport \"./PlayerQuiz.css\";\r\n\r\n\r\nfunction PlayerQuiz({playerQuiz, questionNumber, score, nextQuestion, editButton}){\r\n     //aktivno dugme koje ako editButton posalje true tada je prvi button a ako posalje false tada je drugi button\r\n    const actionButtons = editButton ? (\r\n        <>\r\n             <button onClick={()=>{nextQuestion()}} id=\"playerBtn\" className=\"btn btn-primary\">Sledece pitanje</button>\r\n        </>\r\n    ) : \r\n        <>\r\n            <button id=\"playerBtn\" className=\"btn btn-primary\">Sledece pitanje</button>\r\n        </>\r\n\r\n\r\n     return(\r\n\r\n        <div className=\"player text-center col-4\">\r\n            <h2>{playerQuiz.capitalPlayer}</h2>\r\n            <img src={\"../img/\"+playerQuiz.player+\".jpg\"} className=\"card-img-top\" alt={playerQuiz.capitalPlayer}></img>\r\n            <div className=\"card-body\">\r\n                <p id=\"scorePlayer\"className=\"lead\">Ukupno poena : {score}</p>\r\n                <p id = \"countRounds\" className = \"pt-1\">Pitanje {questionNumber}</p>\r\n                {actionButtons}\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PlayerQuiz;","import React, {useEffect, useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PlayerQuiz from \"../PlayerQuiz/PlayerQuiz\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Quiz.css\";\r\n\r\n/////props je stavljen da bi se kada se refresuje stranica tada se map (drugi) skroz izgubi i ne moze da se vrati\r\n///// da u kucice ostavi pitanja vec vraca pocetne iz app.js pa je bag resen tako da ode na stranu gde se bira ponovo oblasti\r\n/////naravno sve je to uradjeno sa withRouter i useEffect=> props.history.push\r\nfunction Quiz(props, {Questions, Responds, Answers, playerCard}){\r\n\r\n    //kopiramo zato sto kada se refresuje stranica tada nastaje bag sa map (prvim) pa da bismo to resili morali smo ovo da uradimo\r\n    const [copyPlayerCard, setCopyPlayerCard] = useState([{player: `ivo`, capitalPlayer: `Ivo`, casePlayer: `Iva`, text: `Ako mene izaberete necete se pokajati. Gledajte me u oci dok pricam.`, colorBtn: `primary`}])\r\n\r\n    useEffect(()=>{\r\n        //proverava da li se upotrebljava mobilni\r\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\r\n            setDisplayMobilOne(false);\r\n        }\r\n        setCopyPlayerCard(props.playerCard);\r\n        if (props.Questions ===  \"Proba\") {\r\n            props.history.push(\"/choosePlayer\");\r\n        }\r\n    },[])\r\n\r\n    const [roundNumber, setRoundNumber] = useState(3)\r\n    const [questionNumber, setQuestionNumber] = useState (1);\r\n    const[score, setscore] = useState(0);\r\n    const[editButton, setEditButton] = useState(false)\r\n    const[disappearOption, setDisappearOption] = useState(\"\");\r\n    const [displayTextCorrect, setDisplayTextCorrect] = useState(false);\r\n    const [displayTextWrong, setDisplayTextWrong] = useState(false);\r\n    const [displayTextEnd, setDisplayTextEnd] = useState(false);\r\n    const [displayTextWinner, setDisplayTextWinner] = useState(false);\r\n    const[disappearQuestion, setDisappearQuestion] = useState(\"\");\r\n    const[displayMobileOne, setDisplayMobilOne] = useState (true);\r\n    const[displayMobileTwo, setDisplayMobilTwo] = useState (false);\r\n\r\n\r\n    //kada se klikne na neki od odgovora tada editButton postaje true, zbog aktivnog button dugmeta\r\n    //props.new... pokrece funkciju u App.js i bitno je staviti u return tu funkciju da bi radilo\r\n    //funkcija se pokrece kada sa klikne na odgovor na pitanje\r\n    const witchRespond = (Answers) =>{ \r\n        setEditButton(true);\r\n        detectMobile();\r\n        if (props.Responds === Answers) {\r\n             setDisappearOption(\" displayNone\");\r\n             setDisplayTextCorrect(!displayTextCorrect);\r\n             setscore(score + 5);\r\n        }\r\n        else{\r\n            setDisappearOption(\" displayNone\");\r\n            setDisplayTextWrong(!displayTextWrong);\r\n        }\r\n    }\r\n\r\n    //kada se klikne na neki od odgovora tada editButton postaje false, zbog aktivnog button dugmeta\r\n    //isto se povecava broj pitanja za jedan\r\n    //funkcija se pokrece kada se klikne na sledece pitanje \r\n    const nextQuestion = () =>{\r\n        setDisplayMobilTwo(false);\r\n        if (roundNumber === questionNumber) {\r\n            setDisplayTextWrong(false);\r\n            setDisplayTextCorrect(false);\r\n            setDisplayTextEnd(!displayTextEnd);\r\n            setDisplayTextWinner(!displayTextWinner);\r\n            setDisappearQuestion(\" displayNone\");\r\n            setEditButton(false); \r\n        }\r\n        else{\r\n            props.newQuestions(questionNumber);\r\n            setEditButton(false);\r\n            setQuestionNumber(questionNumber+1);\r\n            setDisappearOption(\" \");\r\n            setDisplayTextWrong(false);\r\n            setDisplayTextCorrect(false);\r\n        }\r\n    }\r\n    //funkcija da bi se u pravom rodu stavilo osvojiti\r\n    const endGame = () =>{\r\n        let caseText = ` `;\r\n        if (props.playerCard[0].capitalPlayer===`Horhe`||props.playerCard[0].capitalPlayer===`Ivo`||props.playerCard[0].capitalPlayer===`Lav`) {\r\n            caseText = `osvojio`;\r\n        }\r\n        else {\r\n            caseText = `osvojila`;\r\n        }\r\n        return caseText\r\n    }\r\n\r\n    const detectMobile = () =>{\r\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\r\n            setDisplayMobilTwo(true);\r\n        }\r\n    }\r\n\r\n    const playerTable = copyPlayerCard.map((playerQuiz, index)=>{\r\n        return (\r\n            <PlayerQuiz playerQuiz={playerQuiz} \r\n                        key={index} \r\n                        questionNumber={questionNumber} \r\n                        score = {score} \r\n                        nextQuestion = {nextQuestion}\r\n                        editButton={editButton}/>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-around\">\r\n\r\n            {/* da bi ovo radilo mora da se playerTable stavi u array zagradama */}\r\n            {displayMobileOne && [playerTable]}\r\n\r\n                <div id=\"game\" className=\"quiz col-8\">\r\n                    <header className=\"justify-content-center align-items-center\">\r\n                        <h1 className ={\"questions \"+ disappearQuestion}>{props.Questions}</h1>\r\n\r\n                        {displayTextWinner && <h1 className =\"questions\">{props.playerCard[0].capitalPlayer} je {endGame()} ukupno {score} poena\r\n                        <br></br>***** CESTITAMO *****</h1>} \r\n                                                                    \r\n                    </header>\r\n\r\n                    <div className=\"options text-center\">\r\n                        \r\n                        {displayTextCorrect && <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\r\n                                <h1 className=\"textCorrect mb-5\">Tacan odgovor!</h1>\r\n                            </div>}\r\n                        \r\n                        {displayTextWrong && <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\r\n                            <h1 className=\"mb-4 textWrong\">Pogresan odgovor!</h1>\r\n                            <h4 className=\"mb-5\">Tacan odgovor je: {props.Responds}</h4>\r\n                        </div>}\r\n\r\n                        {displayMobileTwo &&  [playerTable]}\r\n\r\n                        {props.Answers.map((Answers, index)=> \r\n                                <div key = {index} className={\"option\" +disappearOption}>\r\n                                    <div onClick={()=>{witchRespond(Answers)}} className=\"button optionP d-flex justify-content-center align-items-center\">{Answers}</div>\r\n                                </div>   \r\n                        )}\r\n\r\n                        {displayTextEnd && <Link to=\"/\" className=\"btn btn-primary playerBtn playerBtnQuiz\">Pokrenite novu igru</Link>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Quiz);","import React, { useState } from \"react\";\r\nimport StartGame from \"./components/StartGame/StartGame\";\r\nimport {Route, BrowserRouter} from \"react-router-dom\";\r\nimport TablePlayer from \"./components/TablePlayer/TablePlayer\";\r\nimport GameStart from \"./components/GameStart/GameStart\";\r\nimport Quiz from \"./components/Quiz/Quiz\";\r\n\r\nfunction App(){\r\n\r\n    const card = [                            \r\n        {player: `ivo`, capitalPlayer: `Ivo`, casePlayer: `Iva`, text: `Ako mene izaberete necete se pokajati. Gledajte me u oci dok pricam.`, colorBtn: `primary`},\r\n        {player: `horhe`, capitalPlayer: `Horhe`, casePlayer: `Horhea`, text: `Posle 30 godina igranja nisam najpametniji ali sam najbolji.`, colorBtn: `warning`},\r\n        {player: `kristina`, capitalPlayer: `Kristina`, casePlayer: `Kristinu`, text: `Volim da igram kvizove znanja a najvise volim da pobedjujem.`, colorBtn: `success`},\r\n        {player: `lav`, capitalPlayer: `Lav`, casePlayer: `Lava`, text: `Veni, vidi vici ili pametan pametniji najpametniji.`, colorBtn: `secondary`},\r\n        {player: `vladanka`, capitalPlayer: `Vladanka`, casePlayer: `Vladanku`, text: `Mogu da oberem malinjak za 2 sata a i za 2 dana, jer sam u takvoj mogucnosti.`, colorBtn: `info`},\r\n        {player: `justina`, capitalPlayer: `Justina`, casePlayer: `Justinu`, text: `Kunem se u Nemacku. Mi Nemci smo najpametniji hahahaha.`, colorBtn: `danger`}\r\n        ];\r\n\r\n    \r\n    const [questionsGeography, setQuestionsGeography] = useState([\r\n        \"Dunav nastaje u Crnoj šumi, a koja reka izvire u Valdajskoj gori?\", \r\n        'SAD čini 50 saveznih država. Od koliko saveznih država se sastoji Indija?',\r\n        'Najviši vrh kog kontineta je Denali?', \r\n        'Koji norveški grad se smatra najsevernijim gradom na svetu?', \r\n        'U kojoj afričkoj državi se nalazi vodopad Tugela, drugi najviši vodopad na svetu posle Anđeoskog vodopada u Venecueli?' \r\n      ]);\r\n    \r\n    const [answersGeography, setAnswersGeography] = useState([\r\n        ['Volga', 'Don', 'Ural', 'Dnjepar'],\r\n        ['34', '29', '16', '8'],\r\n        ['Severne Amerike', 'Australije', 'Južne Amerike', 'Afrike'],\r\n        ['Harstad', 'Bode', 'Vardo', 'Hamerfest'],\r\n        ['U Mozambiku', 'U Južnoafričkoj Republici', 'U Zambiji', 'U Čadu']\r\n    ]);\r\n         \r\n    const [respondsGeography, setRespondsGeography] = useState([\r\n        'Volga',\r\n        '29', \r\n        'Severne Amerike',\r\n        'Hamerfest',\r\n        'U Južnoafričkoj Republici'\r\n      ]);\r\n\r\n      const [questionsHistory, setQuestionsHistory] = useState([\r\n        \"Prvi svetski rat je poceo?\", \r\n        'Kad je bio Kosovski boj?',\r\n        'Za vreme drugog svetskog rata ko je bio premijer Italije?', \r\n        'Kad je poceo prvi srpski ustanak?', \r\n        'Kad je poceo drugi srpski ustanak?'\r\n      ]);\r\n\r\n      const [answersHistory, setAnswersHistory] = useState([\r\n        ['1814', '1914', '1815', '1915'], \r\n        ['1388', '1489', '1489', '1389'], \r\n        ['Musolini', 'Hitler', 'Djovani', 'Cercil'], \r\n        ['1804', '1805', '1803', '1806'],\r\n        ['1813', '1814', '1815', '1816']\r\n      ]);\r\n\r\n      \r\n\r\n      const [respondsHistory, setRespondsHistory] = useState([\r\n        '1914', \r\n        '1389', \r\n        'Musolini', \r\n        '1804', \r\n        '1815'\r\n      ]);\r\n     \r\n      const [questionsMathematics, setQuestionsMathematics] = useState([\r\n        \" Četiri čoveka igrala su šah 4 sata. Koliko je sati igrao svaki od učesnika?\", \r\n        'Svaki štap ima dva kraja. Koliko krajeva ima štap i po?', \r\n        'Svaka od tri sestre ima brata. Koliko u toj porodici ima dece?', \r\n        'Kada je pešak prešao polovinu puta i još 2 km, ostalo muje da pređe još četvrtinu puta i 6 km. Koliko je dužina puta?', \r\n        'Jedan radnik može završiti posao za 4 sata, a drugi za 12 sati. Za koje vreme bi obavili taj posao radeći zajedno?'\r\n      ]);\r\n\r\n      const [answersMathematics, setAnswersMathematics] = useState([\r\n        ['4 sata', '2 sata', '1 sat', '6 sata'], \r\n        ['2 kraja', '3 kraja', '4 kraja', '1 kraj'], \r\n        ['3 dece', '2 dece', '4 dece', '5 dece'], \r\n        ['16 km', '18 km', '32 km', '34 km'], \r\n        ['2 sata', '3 sata', '4 sata', 'pola sata']\r\n      ]);\r\n\r\n      const [respondsMathematics, setRespondsMathematics] = useState([\r\n        '4 sata', \r\n        '4 kraja',\r\n        '4 dece', \r\n        '32 km',\r\n        'za tri sata' \r\n      ]);\r\n\r\n      const [questionsTheGeneralEducations, setQuestionsTheGeneralEducations] = useState([\r\n        \"Velika Černobiljska katastrofa u Ukrajini izazvana je:\", \r\n        'Kako se zove aktuelni predsednik Turske?', \r\n        'Reakcija između jedne baze i jedne kiseline naziva se:',\r\n        'Kipar je podeljen na:', \r\n        'Koliko ima Jevanđelja u Bibliji:'\r\n      ]);\r\n\r\n      const [answersTheGeneralEducations, setAnswersTheGeneralEducations] = useState([\r\n        ['zemljotresom', 'padom aviona', 'kvarom u nuklearnoj elektrani', 'sirenjem otrovnog gasa'], \r\n        ['Mustafa Kemal Ataturk', 'Melih Mahmutoglu', 'Redžep Tajip Erdogan', 'Redžep Melih Mahmutoglu'], \r\n        ['oksidacija', 'neutralizacija', 'resorbcija', 'redukcija'], \r\n        ['Grčki i Izraelski deo.', 'Turski i Kurdski deo', 'Grčki i Turski deo', 'Turski i Ruski deo.'], \r\n        ['4', '10', '12', '8']\r\n      ]);\r\n\r\n      const [respondsTheGeneralEducations, setRespondsTheGeneralEducations] = useState([\r\n        'kvarom u nuklearnoj elektrani', \r\n        'Redžep Tajip Erdogan',\r\n        'neutralizacija',\r\n        'Grčki i Turski deo',\r\n        `4`\r\n      ]);\r\n      \r\n///////////////////////     StartGame  (suffle all array)       ///////////\r\n      \r\n\r\n      const suffle = () =>{\r\n        //Geography \r\n        let newAnswersGeography = [];\r\n        let newQuestionsGeography = [];\r\n        let newRespondsGeography = [];\r\n        //History \r\n        let newAnswersHistory = [];\r\n        let newQuestionsHistory = [];\r\n        let newRespondsHistory = [];\r\n        //Mathematics\r\n        let newAnswersMathematics = [];\r\n        let newQuestionsMathematics = [];\r\n        let newRespondsMathematics = [];\r\n        //TheGeneralEducations\r\n        let newAnswersTheGeneralEducations = [];\r\n        let newQuestionsTheGeneralEducations = [];\r\n        let newRespondsTheGeneralEducations = [];\r\n        for (let i = 0; i < answersGeography.length+4; i++) {\r\n          let r = Math.floor(Math.random()*answersGeography.length);\r\n          //Geography        \r\n          newAnswersGeography.push(answersGeography[r]);\r\n          answersGeography.splice(r,1);\r\n          newQuestionsGeography.push(questionsGeography[r]);\r\n          questionsGeography.splice(r,1);\r\n          newRespondsGeography.push(respondsGeography[r]);\r\n          respondsGeography.splice(r,1);\r\n          //History\r\n          newAnswersHistory.push(answersHistory[r]);\r\n          answersHistory.splice(r,1);\r\n          newQuestionsHistory.push(questionsHistory[r]);\r\n          questionsHistory.splice(r,1);\r\n          newRespondsHistory.push(respondsHistory[r]);\r\n          respondsHistory.splice(r,1);\r\n          //Mathematics\r\n          newAnswersMathematics.push(answersMathematics[r]);\r\n          answersMathematics.splice(r,1);\r\n          newQuestionsMathematics.push(questionsMathematics[r]);\r\n          questionsMathematics.splice(r,1);\r\n          newRespondsMathematics.push(respondsMathematics[r]);\r\n          respondsMathematics.splice(r,1);\r\n          // TheGeneralEducations\r\n          newAnswersTheGeneralEducations.push(answersTheGeneralEducations[r]);\r\n          answersTheGeneralEducations.splice(r,1);\r\n          newQuestionsTheGeneralEducations.push(questionsTheGeneralEducations[r]);\r\n          questionsTheGeneralEducations.splice(r,1);\r\n          newRespondsTheGeneralEducations.push(respondsTheGeneralEducations[r]);\r\n          respondsTheGeneralEducations.splice(r,1);\r\n        }\r\n        //Geography \r\n        setAnswersGeography(newAnswersGeography);\r\n        setQuestionsGeography(newQuestionsGeography);\r\n        setRespondsGeography(newRespondsGeography);\r\n        // History \r\n        setQuestionsHistory(newQuestionsHistory);\r\n        setAnswersHistory(newAnswersHistory);\r\n        setRespondsHistory(newRespondsHistory);\r\n        //Mathematics \r\n        setQuestionsMathematics(newQuestionsMathematics);\r\n        setAnswersMathematics(newAnswersMathematics);\r\n        setRespondsMathematics(newRespondsMathematics);\r\n        //TheGeneralEducations\r\n        setQuestionsTheGeneralEducations(newQuestionsTheGeneralEducations);\r\n        setAnswersTheGeneralEducations(newAnswersTheGeneralEducations);\r\n        setRespondsTheGeneralEducations(newRespondsTheGeneralEducations);\r\n      }\r\n\r\n\r\n////////////////////////////////////    Start Game (Shuffle Options)        //////////////\r\n      const [options, setOptions] = useState([\"Istorija\", \"Matematika\", \"Geografija\", \"Opste obrazovanje\"]);\r\n\r\n      const shuffleOption = ()=>{\r\n          let rand = [];\r\n           for (let i = 0; i < options.length+3; i++) {\r\n             let r = Math.floor(Math.random()*options.length);       \r\n             rand.push(options[r]);\r\n             options.splice(r,1);\r\n           }\r\n           setOptions(rand);\r\n      };\r\n\r\n\r\n///////////////////////      Quiz (when you choose option to send questions, answer and respond; from GameStart function)      ///////////\r\n    const [Questions, setQuestion] = useState(\"Proba\");\r\n    const [Answers, setAnswers] = useState([\"Proba\"]);\r\n    const [Responds, setResponds] = useState(\"Proba\");  \r\n    const [option, setOption] = useState(\"\"); \r\n\r\n    const chooseOption = (option) => {\r\n        setOption(option);\r\n        if (option === \"Geografija\") {\r\n            setQuestion(questionsGeography[0]);\r\n            setResponds(respondsGeography[0]);\r\n            //ovde salje podatke da bi se izmesao finalni odgovori\r\n            copyAnswers = [...answersGeography[0]];\r\n            setAnswers(suffleAnswers(copyAnswers));\r\n        }\r\n        else if (option === \"Istorija\") {\r\n          setQuestion(questionsHistory[0]);\r\n          setResponds(respondsHistory[0]);\r\n          //ovde salje podatke da bi se izmesao finalni odgovori\r\n          copyAnswers = [...answersHistory[0]];\r\n          setAnswers(suffleAnswers(copyAnswers));\r\n        }\r\n        else if (option === \"Matematika\") {\r\n          setQuestion(questionsMathematics[0]);\r\n          setResponds(respondsMathematics[0]);\r\n          //ovde salje podatke da bi se izmesao finalni odgovori\r\n          copyAnswers = [...answersMathematics[0]];\r\n          setAnswers(suffleAnswers(copyAnswers));\r\n        }\r\n        else {\r\n          setQuestion(questionsTheGeneralEducations[0]);\r\n          setResponds(respondsTheGeneralEducations[0]);\r\n          //ovde salje podatke da bi se izmesao finalni odgovori\r\n          copyAnswers = [...answersTheGeneralEducations[0]];\r\n          setAnswers(suffleAnswers(copyAnswers));\r\n        }\r\n    };\r\n\r\n    \r\n///////////////////////      chooseOption() (suffle final answers)      ///////////\r\n\r\nlet copyAnswers = [];\r\n\r\nconst suffleAnswers = () =>{\r\n  let rand = [];\r\n     for (let i = 0; i < copyAnswers.length+3; i++) {\r\n       let r = Math.floor(Math.random()*copyAnswers.length);       \r\n       rand.push(copyAnswers[r]);\r\n       copyAnswers.splice(r,1);\r\n     }\r\n     return rand\r\n}\r\n\r\n///////////////////////      Quiz (send data about player, from Player start function)      ///////////\r\n\r\n\r\n    const [playerCard, setPlayerCard] = useState([]);\r\n    \r\n    const choosenPlayer = (player) =>{\r\n      //kopira svaki card koji sadrzi u sebi player na kojeg smo kliknuli\r\n      const newCopyCard = card.filter(card=>card.player === player);\r\n      setPlayerCard(newCopyCard);\r\n    }\r\n\r\n  ///////////////////////      Quiz (sends answers, questions, responds to the quiz.js)      ///////////\r\n\r\n\r\n    const newQuestions = (questionNumber) =>{\r\n      if (option === \"Geografija\") {\r\n        setQuestion(questionsGeography[questionNumber]);\r\n        setResponds(respondsGeography[questionNumber]);\r\n        //ovde salje podatke da bi se izmesao finalni odgovori\r\n        copyAnswers = [...answersGeography[questionNumber]];\r\n        setAnswers(suffleAnswers(copyAnswers));\r\n      }\r\n      else if (option === \"Istorija\") {\r\n        setQuestion(questionsHistory[questionNumber]);\r\n        setResponds(respondsHistory[questionNumber]);\r\n        //ovde salje podatke da bi se izmesao finalni odgovori\r\n        copyAnswers = [...answersHistory[questionNumber]];\r\n        setAnswers(suffleAnswers(copyAnswers));\r\n      }\r\n      else if (option === \"Matematika\") {\r\n        setQuestion(questionsMathematics[questionNumber]);\r\n        setResponds(respondsMathematics[questionNumber]);\r\n        //ovde salje podatke da bi se izmesao finalni odgovori\r\n        copyAnswers = [...answersMathematics[questionNumber]];\r\n        setAnswers(suffleAnswers(copyAnswers));\r\n      }\r\n      else {\r\n        setQuestion(questionsTheGeneralEducations[questionNumber]);\r\n        setResponds(respondsTheGeneralEducations[questionNumber]);\r\n        //ovde salje podatke da bi se izmesao finalni odgovori\r\n        copyAnswers = [...answersTheGeneralEducations[questionNumber]];\r\n        setAnswers(suffleAnswers(copyAnswers));\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n    return(\r\n        <>\r\n            <BrowserRouter>\r\n                <Route path = \"/\" exact>\r\n                    <StartGame suffle={suffle}/>\r\n                </Route>\r\n                <Route path = \"/choosePlayer\">\r\n                    <TablePlayer card={card} shuffleOption={shuffleOption} choosenPlayer={choosenPlayer}/>\r\n                </Route>\r\n                <Route path = \"/game\">\r\n                    <GameStart options={options} chooseOption={chooseOption}/>\r\n                </Route>\r\n                <Route path = \"/quiz\" >\r\n                    <Quiz Questions={Questions} \r\n                          Answers={Answers} \r\n                          Responds={Responds} \r\n                          options={options} \r\n                          playerCard={playerCard}\r\n                          // ovde mora da se napise da bi se povezao u Quiz.js sa props\r\n                          newQuestions={newQuestions}\r\n                          />\r\n                </Route>\r\n            </BrowserRouter>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />,document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}